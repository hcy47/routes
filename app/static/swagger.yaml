swagger: '2.0'
info:
  title: "Mechanic shop Management API"
  description: "Used to Manage Mechanic Shop"
  version: '0.0.1'

host: "127.0.0.1:5000" # during devrelopment my api is served on my llocal host (will cahnge when we go to production)
schemes:
  - "http"
consumes:
  - "Application/json" # my application rtecieves json data
produces:
  - "Application/json" # and produces json data




paths: #information about our routes

  /mechanic/login: # End points starts the path
    post: # request type (post, get, put, delete)
      tags:
        - Mechanics # adds this route to a category
      summary: "Login endpoint (generates a token)" # at a glance information about 
      description: "Validates mechanic credentials (email and pasword), and produces "
      parameters: # info abot data being sent,( dont forget the 's' in parameters)
        - in: "body" # where will this come from
          name: "body"
          description: "Login Credentials" # what are you sending
          required: true
          schema:
            $ref: "#/definitions/LoginCredentials"
      responses:
        200:
          description: "Login Succesful"
          schema:
            $ref: "#/definitions/LoginResponse"
          examples:
            application/json:
              message: 'Welcome Mechanic'
              token: 'J9.cPfQxS-OncPf0e7ORYHFItQLt6nJ1k_WXzjbpjQ1AhM'

  /mechanic:
    post:
      tags:
        - Mechanics
      summary: "Register Mechanic"
      description: "Send in mechanic info, to create a mechanic  profile that will be stored in the db"
      paramaters:
        - in: "body"
          name: "body"
          description: "New Mechanic information"
          required: true
          schema:
            $ref: "#/definition/MechanicInput"
      responses:
        201:
          description: :Creation succesfull
          schema:
            $ref: "#definitions/MechanicResponse"
          examples:
            application/json:
              email: "test@email.com"
              password: "123"
              first_name: "John"
              last_name: "Doe"
              salary: "120.000"
              address: "12 oak str"
              id: 0


definitions: # information about the shape of input and output json (Need to be written first)

  LoginCredentials: # Input data required for login route
    type: object
    properties:
      email:
        type: string
      password:
        type: string

    required:
      - email
      - password

  LoginResponse: # Response from /login ENDpoint

    type: object
    properties:
      message:
        type: string
      token:
        type: string

  userInput:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      salary:
        type: float


    required:
      - email
      - first_name
      - last_name
      - password
      - salary
    
  userResponse:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      salary:
        type: float
      address:
        type: string
